(()=>{"use strict";const{storage:e,tabs:t,runtime:s,alarms:o}=chrome;chrome.action.onClicked.addListener((e=>{chrome.tabs.create({url:"index.html"})})),{active:!1,currentTab:null,sessionTime:0,appStarted:!1,getCurrentTab:async function(){let[e]=await chrome.tabs.query({active:!0,currentWindow:!0});return e},init:async function(){try{this.active||(e.sync.clear(),o.clearAll((()=>{console.log("alarms are cleared")})),this.listenForAlarm(),this.listenToExternalMessages(),this.listenToStorage(),this.listenToTabs(),this.listenForDashboardRedirect(),this.active=!0),this.currentTab=await this.getCurrentTab()}catch(e){console.log("issue with start up in background js",e)}},createAlarm:function(){chrome.alarms.create("timer",{when:Date.now()+this.sessionTime}),this.alarmCreated=!0,chrome.storage.sync.set({alarmCreated:!0})},resetStorage(){e.local.set({sessionTime:0,timerOn:!1,currentSession:{},alarmCreated:!1,sessionComplete:!1,user:{},email:""})},listenToExternalMessages:function(){return s.onMessageExternal.addListener((async(e,t,s)=>{try{if("create-timer"===e.message&&(this.sessionTime=e.sessionTime,this.createAlarm()),"continue-alarm"===e.message&&(console.log("you want me to start an alarm?"),o.clearAll((()=>{console.log("alarms are cleared again"),o.create("timer",{when:Date.now()+e.sessionTime}),console.log("new alarm created")}))),"timer-done"===e.message&&o.create("timer",{when:Date.now()}),"set-blocked-sites"===e.message){console.log("set-blocked-sites message received");const t=[];e.blockedSites.forEach((e=>{t.push(e.siteUrl)})),chrome.storage.sync.set({blocked:t,currUser:e.currUser},(()=>{console.log("sites are blocked in chrome")})),console.log("blocked sites",e),chrome.storage.sync.get(null,(e=>{console.log("current chrome storage",e)}))}"toggle-block-or-not"===e.message&&chrome.storage.sync.get(["blocked"],(t=>{if(t.blocked.find((t=>t===e.toggleSite))){const s=t.blocked.filter((t=>t!==e.toggleSite));chrome.storage.sync.set({blocked:s})}else t.blocked.push(e.toggleSite),chrome.storage.sync.set({blocked:t.blocked})}))}catch(e){console.log(e)}}))},listenToStorage:function(){return e.onChanged.addListener((async function(e,t){for(let[s,{oldValue:o,newValue:r}]of Object.entries(e))console.log(`Storage key "${s}" in namespace "${t}" changed.`,`Old value was "${JSON.stringify(o)}", new value is "${JSON.stringify(r)}".`)}))},listenToTabs:function(){return t.onUpdated.addListener((function(t,s){chrome.tabs.query({active:!1},(e=>{e.reduce(((e,t)=>e.lastAccessed>t.lastAccessed?e:t))})),chrome.storage.sync.get(null,(o=>{const{currentSession:r,alarmCreated:a,sessionComplete:n,sessionTime:c,timerOn:i}=o,l=s.pendingUrl||s.url;if(!l||!l.startsWith("http"))return;const m=new URL(l).hostname;e.sync.set({userAttempt:m}),e.sync.get(["blocked","currUser"],(async function(e){const{blocked:s,currUser:o}=e;if(Array.isArray(s)&&s.find((e=>e.includes(m)))){const e={method:"post",headers:{"Content-type":"application/x-www-form-urlencoded; charset=UTF-8"},body:`userAttempted=${m}&userId=${o}`};try{await fetch("https://pomodoro-go-1.herokuapp.com/api/blocks",e)}catch(e){console.error("Request failed",e)}chrome.tabs.update(t,{url:"https://pomodoro-go-1.herokuapp.com/uhoh"})}}))}))}))},listenForAlarm:function(){return chrome.alarms.onAlarm.addListener((function(e){"startTimer"===e.name&&(chrome.notifications.create(void 0,{type:"basic",title:"Your focus session is complete!",message:"Nice job! You deserve a break!",iconUrl:"logo-pomo.png",requireInteraction:!0,silent:!1},(()=>{console.log("last error: ",chrome.runtime.lastError)})),chrome.storage.local.set({alarmCreated:!1,currentSession:{},timerOn:!1,sessionTime:0,sessionComplete:!0}))}))},listenForDashboardRedirect:function(){return chrome.notifications.onButtonClicked.addListener((async(e,t)=>{let s=await this.getCurrentTab();chrome.tabs.update(s.id,{url:"https://pomodoro-go-1.herokuapp.com/dashboard"})}))}}.init(),chrome.tabs.onUpdated.addListener((function(e,t){t.url&&new Promise((e=>{chrome.storage.local.get(["blackList"],(t=>{e(t.blackList)}))})).then((s=>{if(s)for(let o=0;o<s.length;o++)t.url.includes(s[o])&&s[o].length&&chrome.tabs.update(e,{url:"https://pomodoro-go-1.herokuapp.com/uhoh"})}))}))})();
//# sourceMappingURL=background.js.map
{"version":3,"sources":["webpack://pomodoro_go/./client/storage.js","webpack://pomodoro_go/webpack/bootstrap","webpack://pomodoro_go/webpack/runtime/define property getters","webpack://pomodoro_go/webpack/runtime/hasOwnProperty shorthand","webpack://pomodoro_go/webpack/runtime/make namespace object","webpack://pomodoro_go/./client/background.js"],"names":["setStoredBlackList","blackList","vals","Promise","resolve","chrome","storage","local","set","getStoredBlackList","get","res","setStoredAuth","auth","getStoredAuth","tabs","runtime","alarms","scripting","action","onClicked","addListener","tab","console","log","create","url","filterBlackListByUser","filtered","filter","listItem","userId","id","mapped","map","item","site","siteUrl","background","active","currentTab","sessionTime","appStarted","getCurrentTab","queryOptions","currentWindow","query","init","sync","clear","clearAll","listenForAlarm","listenToExternalMessages","listenToStorage","listenToTabs","listenForBlockedSite","listenForDashboardRedirect","error","createAlarm","when","Date","now","alarmCreated","resetStorage","timerOn","currentSession","sessionComplete","user","email","onMessageExternal","message","sender","sendResponse","sites","blockedSites","forEach","push","blocked","currUser","results","toggleSite","doesItExist","find","update","each","onChanged","changes","namespace","key","oldValue","newValue","Object","entries","JSON","stringify","onUpdated","tabId","changeInfo","reduce","previous","current","lastAccessed","pendingUrl","startsWith","hostname","URL","userAttempt","Array","isArray","domain","includes","options","method","headers","body","fetch","err","async","then","onAlarm","alarm","notifications","undefined","type","title","iconUrl","buttons","lastError","onButtonClicked","notificationId","buttonIdx"],"mappings":"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","file":"background.js","sourcesContent":["export function setStoredBlackList(blackList) {\n  const vals = {\n    blackList,\n  };\n  return new Promise((resolve) => {\n    chrome.storage.local.set(vals, () => {\n      resolve();\n    });\n  });\n}\n\nexport function getStoredBlackList() {\n  return new Promise((resolve) => {\n    chrome.storage.local.get(['blackList'], (res) => {\n      resolve(res.blackList);\n    });\n  });\n}\n\nexport function setStoredAuth(auth) {\n  const vals = {\n    auth,\n  };\n  return new Promise((resolve) => {\n    chrome.storage.local.set(vals, () => {\n      resolve();\n    });\n  });\n}\n\nexport function getStoredAuth() {\n  return new Promise((resolve) => {\n    chrome.storage.local.get(['auth'], (res) => {\n      resolve(res.auth);\n    });\n  });\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","'use strict';\nconst { storage, tabs, runtime, alarms, scripting } = chrome;\nimport { getStoredAuth, getStoredBlackList } from './storage';\n\nchrome.action.onClicked.addListener((tab) => {\n  console.log('new tab created');\n  chrome.tabs.create({\n    url: 'index.html',\n  });\n});\n\nconst filterBlackListByUser = (blackList, auth) => {\n  const filtered = blackList.filter((listItem) => {\n    return listItem.userId === auth.id;\n  });\n  console.log('filtered:,', filtered);\n  const mapped = filtered.map((item) => item.site.siteUrl);\n  console.log('mapped:,', mapped);\n  return mapped;\n};\n\nconst background = {\n  active: false,\n  currentTab: null,\n  sessionTime: 0,\n  appStarted: false,\n  getCurrentTab: async function () {\n    let queryOptions = { active: true, currentWindow: true };\n    let [tab] = await chrome.tabs.query(queryOptions);\n    return tab;\n  },\n  init: async function () {\n    try {\n      if (!this.active) {\n        console.log('running app!');\n        storage.sync.clear();\n        alarms.clearAll(() => {\n          console.log('alarms are cleared');\n        });\n\n        this.listenForAlarm();\n        this.listenToExternalMessages();\n        this.listenToStorage();\n        this.listenToTabs();\n        // this.listenForBlackListIncrement();\n        this.listenForBlockedSite();\n        this.listenForDashboardRedirect();\n        this.active = true;\n      }\n      this.currentTab = await this.getCurrentTab();\n    } catch (error) {\n      console.log('issue with start up in background js', error);\n    }\n  },\n  createAlarm: function () {\n    chrome.alarms.create('timer', {\n      when: Date.now() + this.sessionTime,\n    });\n    this.alarmCreated = true;\n    chrome.storage.sync.set({ alarmCreated: true });\n    console.log('alarm creeated!!!');\n  },\n  resetStorage() {\n    storage.local.set({\n      sessionTime: 0,\n      timerOn: false,\n      currentSession: {},\n      alarmCreated: false,\n      sessionComplete: false,\n      user: {},\n      email: '',\n    });\n  },\n\n  listenToExternalMessages: function () {\n    return runtime.onMessageExternal.addListener(\n      async (message, sender, sendResponse) => {\n        try {\n          if (message.message === 'create-timer') {\n            this.sessionTime = message.sessionTime;\n            this.createAlarm();\n          }\n          if (message.message === 'continue-alarm') {\n            console.log('you want me to start an alarm?');\n            alarms.clearAll(() => {\n              console.log('alarms are cleared again');\n              alarms.create('timer', {\n                when: Date.now() + message.sessionTime,\n              });\n              console.log('new alarm created');\n            });\n          }\n          if (message.message === 'timer-done') {\n            alarms.create('timer', { when: Date.now() });\n          }\n          if (message.message === 'set-blocked-sites') {\n            console.log('set-blocked-sites message received');\n            const sites = [];\n            message.blockedSites.forEach((site) => {\n              sites.push(site.siteUrl);\n            });\n            chrome.storage.sync.set(\n              { blocked: sites, currUser: message.currUser },\n              () => {\n                console.log('sites are blocked in chrome');\n              }\n            );\n            console.log('blocked sites', message);\n            chrome.storage.sync.get(null, (results) => {\n              console.log('current chrome storage', results);\n            });\n          }\n          if (message.message === 'toggle-block-or-not') {\n            console.log('user is toggleing a blocked site', message.toggleSite);\n            chrome.storage.sync.get(['blocked'], (results) => {\n              const doesItExist = results.blocked.find((url) => {\n                return url === message.toggleSite;\n              });\n              if (doesItExist) {\n                const update = results.blocked.filter((each) => {\n                  return each !== message.toggleSite;\n                });\n                chrome.storage.sync.set({ blocked: update });\n              } else {\n                results.blocked.push(message.toggleSite);\n                chrome.storage.sync.set({ blocked: results.blocked });\n              }\n            });\n          }\n        } catch (error) {\n          console.log(error);\n        }\n      }\n    );\n  },\n  listenToStorage: function () {\n    return storage.onChanged.addListener(async function (changes, namespace) {\n      // logging out the changes in storage\n      // THIS CODE IS FOR DEV PURPOSES\n      // YOU WILL HAVE ALOT OF LOGS IN CONSOLE\n      for (let [key, { oldValue, newValue }] of Object.entries(changes)) {\n        console.log(\n          `Storage key \"${key}\" in namespace \"${namespace}\" changed.`,\n          `Old value was \"${JSON.stringify(\n            oldValue\n          )}\", new value is \"${JSON.stringify(newValue)}\".`\n        );\n      }\n    });\n  },\n  listenToTabs: function () {\n    return tabs.onUpdated.addListener(function (tabId, changeInfo) {\n      console.log('listening to tabs, tabID', tabId);\n      chrome.tabs.query({ active: false }, (tabs) => {\n        let tab = tabs.reduce((previous, current) => {\n          return previous.lastAccessed > current.lastAccessed\n            ? previous\n            : current;\n        });\n      });\n      chrome.storage.sync.get(null, (results) => {\n        const {\n          currentSession,\n          alarmCreated,\n          sessionComplete,\n          sessionTime,\n          timerOn,\n        } = results;\n        const url = changeInfo.pendingUrl || changeInfo.url;\n        if (!url || !url.startsWith('http')) {\n          return;\n        }\n        const hostname = new URL(url).hostname;\n\n        storage.sync.set({ userAttempt: hostname });\n\n        storage.sync.get(['blocked', 'currUser'], async function (sync) {\n          const { blocked, currUser } = sync;\n          console.log('blocked:', blocked);\n          console.log('currUser:', currUser);\n          if (\n            Array.isArray(blocked) &&\n            blocked.find((domain) => {\n              return domain.includes(hostname);\n            })\n          ) {\n            const options = {\n              method: 'post',\n              headers: {\n                'Content-type':\n                  'application/x-www-form-urlencoded; charset=UTF-8',\n              },\n              body: `userAttempted=${hostname}&userId=${currUser}`,\n            };\n\n            try {\n              await fetch(\n                'https://pomodoro-go-1.herokuapp.com/api/blocks',\n                options\n              );\n            } catch (err) {\n              console.error('Request failed', err);\n            }\n\n            chrome.tabs.update(tabId, {\n              url: 'https://pomodoro-go-1.herokuapp.com/uhoh',\n            }); // hard-code it to production url atm instead of 'http://localhost:8080/uhoh'\n          }\n        });\n      });\n    });\n  },\n  // listenForBlackListIncrement: function () {\n  //   // increment blocks in Blacklist table when a blacklisted site is blocked\n\n  //   return chrome.tabs.onUpdated.addListener(function async(tabId, changeInfo) {\n  //     chrome.storage.sync.get(['auth', 'blackList'], function (result) {\n  //       const { auth, blackList } = result;\n  //       console.log('blackList in background:', blackList);\n  //       if (blackList) {\n  //         const blackListAuth = blackList.filter((entry) => {\n  //           return entry.userId === auth.id;\n  //         });\n  //         const url = changeInfo.pendingUrl || changeInfo.url;\n  //         if (url) {\n  //           const matchingBlackList = blackListAuth.find((entry) => {\n  //             return entry.site.siteUrl === url;\n  //           });\n\n  //           if (matchingBlackList) {\n  //             matchingBlackList.blocks++;\n  //             console.log('matchingBlackList:', matchingBlackList);\n  //             chrome.storage.sync.set({ updatedBlackList: matchingBlackList });\n  //           }\n  //         }\n  //       }\n  //     });\n  //   });\n  // },\n\n  listenForBlockedSite: function () {\n    return chrome.tabs.onUpdated.addListener(function async(tabId, changeInfo) {\n      console.log('changeInfo', changeInfo);\n      console.log('changeInfo.url:', changeInfo.url);\n      if (changeInfo.url) {\n        getStoredBlackList().then((blackList) => {\n          getStoredAuth().then((auth) => {\n            const filtered = filterBlackListByUser(blackList, auth);\n            if (filtered.includes(changeInfo.url)) {\n              console.log('we have a match');\n              chrome.tabs.update(tabId, {\n                url: 'https://pomodoro-go-1.herokuapp.com/uhoh',\n              });\n            }\n          });\n        });\n      }\n    });\n  },\n\n  listenForAlarm: function () {\n    return chrome.alarms.onAlarm.addListener(function (alarm) {\n      // notifies the user when the session is over\n      chrome.notifications.create(\n        undefined,\n        {\n          type: 'basic',\n          title: 'Pomodoro-Go',\n          message: 'Time has elasped, head back to Pomorodo-Go to review',\n          iconUrl: 'https://img.icons8.com/android/24/000000/timer.png',\n          buttons: [{ title: 'Go to dashboard' }],\n        },\n        () => {\n          console.log('last error: ', chrome.runtime.lastError);\n        }\n      );\n      chrome.storage.local.set({\n        alarmCreated: false,\n        currentSession: {},\n        timerOn: false,\n        sessionTime: 0,\n        sessionComplete: true,\n      });\n    });\n  },\n  listenForDashboardRedirect: function () {\n    // THIS BUTTON WORKS BUT DASHBOARD DOES NOT LOAD\n    return chrome.notifications.onButtonClicked.addListener(\n      async (notificationId, buttonIdx) => {\n        // redirects to dashboard after session is complete\n        let tab = await this.getCurrentTab();\n        chrome.tabs.update(tab.id, {\n          url: 'https://pomodoro-go-1.herokuapp.com/dashboard',\n        });\n      }\n    );\n  },\n};\n\nbackground.init();\n"],"sourceRoot":""}